/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        ListNode* odd = new ListNode(0);
        ListNode* even = new ListNode(0);
        ListNode* p = head;
        ListNode* oh = new ListNode();
        ListNode* eh = new ListNode();
        oh=odd;
        eh=even;
        int index=1;
        while(p){
            if(index%2!=0){
                odd->next=new ListNode(p->val,nullptr);
                odd=odd->next;
            }
            else{
                even->next=new ListNode(p->val,nullptr);
                even=even->next;
            }
            index++;
            p=p->next;
        }
        odd->next = eh->next;
        odd=oh->next;
        return odd;
    }
};
