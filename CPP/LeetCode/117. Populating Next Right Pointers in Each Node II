/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    void h(Node* root){
        if(!root){return;}
        Node* p=root;
        int c=0;
        Node* tail;
        while(p){
            if(p->left){
                if(c==0){
                    tail=p->left;
                    c=1;
                }
                else{
                    tail->next=p->left;
                    tail=tail->next;
                }
            }
            if(p->right){
                if(c==0){
                    tail=p->right;
                    c=1;
                }
                else{
                    tail->next=p->right;
                    tail=tail->next;
                }
            }
            p=p->next;
        }
        h(root->left);
        h(root->right);
    }
    Node* connect(Node* root) {
        h(root);
        return root;
    }
};
