/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> res;
    void S(TreeNode* root,int targetSum,vector<int>& sres){
        if(root==NULL){
            return;
        }
        if(root->left==NULL && root->right==NULL && targetSum==root->val){
            sres.push_back(root->val);
            res.push_back(sres);
            sres.pop_back();
            return;
        }
        sres.push_back(root->val);
        S(root->left,targetSum-(root->val),sres);
        S(root->right,targetSum-(root->val),sres);
        sres.pop_back();
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> sres;
        S(root,targetSum,sres);
        return res;
    }
};
