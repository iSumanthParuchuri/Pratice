/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    ListNode* head;
    int len = 0;
    
public:
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    Solution(ListNode* hd) {
        head = hd;
        ListNode* current = head;
        while(current)
        {
            len++;
            current = current->next;
        }
        srand(time(0));
    }
    
    /** Returns a random node's value. */
    int getRandom() {
       int traverse =  rand()%len;
        ListNode* current = head;
        while(traverse)
        {
            current = current->next;
            traverse--;
        }
        return current->val;
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(head);
 * int param_1 = obj->getRandom();
 */
