/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> res;
    void LL(TreeNode* root){
        if(root==NULL){return;}
        res.push_back(root->val);
        LL(root->left);
        LL(root->right);
    }
    void flatten(TreeNode* root) {
        if(root==NULL){return;}
        LL(root);
        int n=res.size(),i=1;
        root->left=nullptr;
        root->right=nullptr;
        while(n>1){
            root->right=new TreeNode(res[i]);
            root=root->right;
            i++;
            n--;
        }
    }
};
