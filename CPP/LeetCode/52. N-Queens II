class Solution {
public:
    int c=0;
    int totalNQueens(int n) {
        int siz=n;
        vector<int> diag1(2*siz,0),diag2(2*siz,0),col(siz,0);
        string s="";
        for(int i=0;i<n;i++){
            s+=".";
        }
        vector<string> sb(n,s);
        solveQ(0,n,sb,diag1,diag2,col);
        //res.push_back(sb);
        return c;
    }
    void solveQ(int row, int n, vector<string>& sb, vector<int> diag1, vector<int> diag2, vector<int> col){
        if(row>=n){
            c++;
            return;
        }
        for(int i=0;i<n;i++){
            if(diag1[row+i] || diag2[row-i+n-1] || col[i]){
                continue;
            }
            col[i]=1;
            diag1[row+i]=1;
            diag2[row-i+n-1]=1;
            sb[row][i]='Q';
            solveQ(row+1,n,sb,diag1,diag2,col);
            col[i]=0;
            diag1[row+i]=0;
            diag2[row-i+n-1]=0;
            sb[row][i]='.';
        }
    }
};
