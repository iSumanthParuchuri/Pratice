def evalu(p1,p2,p3,p4):
        pp12=(p1[0]-p2[0])**2+(p1[1]-p2[1])**2
        pp13=(p1[0]-p3[0])**2+(p1[1]-p3[1])**2
        pp14=(p1[0]-p4[0])**2+(p1[1]-p4[1])**2
        l=[pp12,pp13,pp14]
        l.sort()
        if l[0]==0 and l[1]==0 and l[2]==0:
            return False
        if(l[0]==l[1] and l[0]*2==l[2]):
            return True
class Solution(object):    
    def validSquare(self, p1, p2, p3, p4):
        """
        :type p1: List[int]
        :type p2: List[int]
        :type p3: List[int]
        :type p4: List[int]
        :rtype: bool
        """
        if(evalu(p1,p2,p3,p4) and evalu(p2,p1,p3,p4) and evalu(p3,p2,p1,p4) and evalu(p4,p2,p3,p1)):
            return True
        return False
        
        
